{"version":3,"sources":["configs/routes.ts","components/NavBar/NavBar.tsx","pages/Dashboard/Dashboard.tsx","components/Button/Button.tsx","pages/Counter/Counter.tsx","components/Modal/Modal.tsx","components/Input/Input.tsx","components/Pagination/Pagination.tsx","components/FriendlyLoading/FriendlyLoading.tsx","components/DataTable/DataTable.tsx","helpers/api.ts","pages/Employees/validators.ts","pages/Employees/Employees.tsx","services/employee.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ROUTES","DASHBOARD","COUNTER","EMPLOYEES","NAV_LIST","link","title","NavBar","location","useLocation","className","map","active","pathname","to","Dashboard","Button","children","type","size","other","Counter","useState","count","setCount","increment","useCallback","reset","window","confirm","disabled","onClick","Modal","isVisible","onOk","onCancel","okText","cancelText","e","stopPropagation","defaultProps","Input","value","name","onChange","error","htmlFor","id","target","Pagination","defaultCurrent","total","pageSize","page","setPage","totalPages","Math","ceil","useEffect","onPrev","onNext","rel","Array","fill","_","index","temp","LOADING_MESSAGES","FriendlyLoading","loadingMessage","floor","random","length","DataTable","data","columns","pagination","renderFooter","isLoading","renderData","useMemo","slice","column","icon","key","dataItem","render","content","colSpan","nextPage","_sendRequest","url","method","options","defaultOptions","queryString","obj","str","p","hasOwnProperty","push","encodeURIComponent","join","serialize","body","JSON","stringify","headers","fetch","then","response","ok","json","Promise","reject","sendRequest","success","Api","validateName","validateEmail","email","test","validatePosition","DEFAULT_FORM_DATA","position","DEFAULT_FORM_DATA_VALIDATORS","Employees","invalidForm","setInvalidForm","formData","setFormData","setLoading","formValidators","setFormValidators","employees","setEmployees","isShowModalCreate","setShowModalCreate","fetchEmployees","handleCloseCreateModal","a","get","sortBy","order","result","console","log","handleCreateEmployee","validateForm","post","createdAt","Date","toISOString","handleInputChange","field","dataIndex","href","employee","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.492da7f9.chunk.js","sourcesContent":["export const ROUTES = {\n  DASHBOARD: '/',\n  COUNTER: '/counter',\n  EMPLOYEES: '/employees',\n};\n\nexport const NAV_LIST = [\n  { link: ROUTES.DASHBOARD, title: 'Dashboard' },\n  { link: ROUTES.COUNTER, title: 'Counter' },\n  { link: ROUTES.EMPLOYEES, title: 'Employees' },\n];\n\nexport default ROUTES;\n","import {\n  Link,\n  useLocation,\n} from \"react-router-dom\";\nimport { NAV_LIST } from '../../configs/routes';\nimport './NavBar.css';\n\nexport default function NavBar() {\n  let location = useLocation();\n\n  return (\n    <header className=\"header\">\n      <ul className=\"nav-bar\">\n        {NAV_LIST.map(({link, title}) => {\n          const active = location.pathname === link;\n          return (\n            <li key={link} className={`nav-item ${active ? 'nav-item-active' : ''}`}>\n              <Link to={link}>{title}</Link>\n            </li>\n          );\n        })}\n      </ul>\n    </header>\n  )\n}\n","import './Dashboard.css';\n\nexport default function Dashboard() {\n  return (\n    <div className=\"dashboard-page\">\n      Dashboard\n    </div>\n  )\n}\n","import React from 'react';\nimport './Button.css';\n\ntype Props = {\n  type?: 'primary' | 'default';\n  size?: 'large' | 'small';\n  children: React.ReactNode;\n  onClick: () => void;\n  disabled?: boolean;\n}\n\nconst Button: React.FC<Props> = ({ children, type, size, ...other }) => {\n  return (\n    <button {...other} className={`btn ${type ? `btn-${type}` : ''} ${size === 'large' ? 'btn-lg' : ''}`}>\n      {children}\n    </button>\n  )\n}\n\nexport default Button;\n","import { useState, useCallback } from 'react'\nimport Button from '../../components/Button/Button';\nimport './Counter.css';\n\nexport default function Counter() {\n  let [count, setCount] = useState(0);\n\n  const increment = useCallback(() => {\n    setCount(count + 1);\n  }, [count]);\n\n  const reset = useCallback(() => {\n    if (!window.confirm('Are you sure to reset?')) return;\n\n    setCount(0);\n  }, []);\n\n  return (\n    <div className=\"counter-page\">\n        <h1 className=\"title\">Counter</h1>\n      <div className=\"counter-container\">\n        <span className=\"counter\">{count}</span>\n      </div>\n      <div className=\"counter-action-container\">\n        <Button\n          size=\"large\"\n          disabled={!count}\n          onClick={reset}>\n          Reset\n        </Button>\n        <Button\n          type=\"primary\"\n          size=\"large\"\n          onClick={increment}>\n          Increase\n        </Button>\n      </div>\n    </div>\n  )\n}\n","import React from 'react';\nimport Button from '../Button/Button';\nimport './Modal.css';\n\ntype Props ={\n  isVisible: boolean;\n  title: string;\n  okText?: string;\n  cancelText?: string;\n  onOk?: () => void;\n  onCancel?: () => void;\n  children: React.ReactNode;\n}\n\nconst Modal: React.FC<Props> = ({ title, isVisible, children, onOk, onCancel, okText, cancelText }) => {\n  return (\n    <div className={`modal ${isVisible ? 'show' : ''}`} onClick={() => onCancel && onCancel()}>\n      <div className=\"modal-content\" onClick={e => e.stopPropagation()}>\n        <div className=\"modal-header\">\n          <h4 className=\"modal-title\">{title}</h4>\n        </div>\n        <div className=\"modal-body\">\n          {children}\n        </div>\n        <div className=\"modal-footer\">\n          <Button\n            onClick={() => onCancel && onCancel()}\n          >\n            {cancelText}\n          </Button>\n          <Button\n            type=\"primary\"\n            onClick={() => onOk && onOk()}\n          >\n            {okText}\n          </Button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nModal.defaultProps = {\n  cancelText: 'Cancel',\n  okText: 'OK',\n}\n\nexport default Modal;","import React from 'react';\nimport './Input.css';\n\ntype Props ={\n  title: string;\n  value: string;\n  name: string;\n  onChange: (text: string) => void;\n  error?: string;\n}\n\nconst Input: React.FC<Props> = ({ title, value, name, onChange, error }) => {\n  return (\n    <div className=\"input-wrapper\">\n      <label htmlFor={name}>{title}:</label>\n      <div className=\"input-container\">\n        <input\n          id={name}\n          value={value}\n          onChange={e => onChange(e.target.value)}\n        />\n        {error ? (\n          <div className=\"input-error-container\">\n            <span className=\"input-error\">{error}</span>\n          </div>\n        ) : null}\n      </div>\n    </div>\n  )\n}\n\nexport default Input;\n","import React, { useEffect, useState, useCallback } from 'react'\nimport './Pagination.css';\n\ntype Props ={\n  defaultCurrent?: number;\n  total: number;\n  pageSize?: number;\n  onChange: (page: number) => void;\n}\n\nconst PAGE_SIZE = 5;\n\nconst Pagination: React.FC<Props> = ({ defaultCurrent = 1, total, pageSize, onChange }) => {\n  let [page, setPage] = useState(defaultCurrent || 1);\n  const totalPages = Math.ceil(total / (pageSize || PAGE_SIZE));\n\n  useEffect(() => {\n    setPage(defaultCurrent);\n  }, [defaultCurrent]);\n\n  useEffect(() => {\n    onChange(page);\n  }, [page, onChange]);\n\n  const onPrev = useCallback(() => {\n    if (page !== 1) {\n      setPage(page - 1)\n    }\n  }, [page]);\n\n  const onNext = useCallback(() => {\n    if (page !== totalPages) {\n      setPage(page + 1)\n    }\n  }, [page, totalPages]);\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className=\"pagination-prev\"\n        onClick={onPrev}\n      >\n        <a rel=\"nofollow\"><i className=\"fa fa-chevron-left\" /></a>\n      </li>\n      {Array(totalPages).fill('').map((_, index) => {\n        const temp = index + 1;\n        return (\n          <li\n            key={index}\n            className={`pagination-item ${temp === page ? 'pagination-item-active' : ''}`}\n            onClick={() => setPage(temp)}\n          >\n            <a rel=\"nofollow\">{temp}</a>\n          </li>\n        );\n      })}\n      <li\n        className=\"pagination-next\"\n        onClick={onNext}\n      >\n        <a rel=\"nofollow\"><i className=\"fa fa-chevron-right\" /></a>\n      </li>\n    </ul>\n  )\n}\n\nexport default Pagination;","import \"./FriendlyLoading.css\";\n\nconst LOADING_MESSAGES = [\n  'Be patient, your data is coming...',\n  'Getting data, just for you. Hang tight...',\n  'Please wait...',\n  'Loading your data...',\n];\n\nexport default function FriendlyLoading() {\n  let loadingMessage = LOADING_MESSAGES[Math.floor(Math.random() * LOADING_MESSAGES.length)];\n\n  return (\n    <div className=\"friendly-loading\">\n      <div className=\"loading\"><div></div><div></div><div></div></div>\n      <h5 className=\"loading-message\">{loadingMessage}</h5>\n    </div>\n  )\n};\n","import React, { useState, useMemo } from 'react';\nimport Pagination from '../Pagination/Pagination';\nimport FriendlyLoading from '../FriendlyLoading/FriendlyLoading';\nimport './DataTable.css';\n\ntype Props = {\n  data: any[];\n  columns: Column[];\n  pagination: PaginationOption;\n  renderFooter?: () => void;\n  isLoading?: boolean;\n}\n\ntype PaginationOption = {\n  pageSize?: number;\n  defaultCurrent?: number;\n};\n\ntype Column = {\n  title: string;\n  key: string;\n  dataIndex: string;\n  icon?: React.ReactNode;\n  render?: (text: string) => void;\n}\n\nconst DataTable: React.FC<Props> = ({ data, columns, pagination, renderFooter, isLoading }) => {\n  const { defaultCurrent, pageSize = 5 } = pagination;\n  let [page, setPage] = useState(1);\n\n  const renderData = useMemo(() => {\n    return data.slice(pageSize * (page - 1), pageSize * page);\n  }, [data, page, pageSize]);\n\n  return (\n    <div className=\"table-wrapper\">\n      {isLoading && <FriendlyLoading />}\n      <table className=\"data-table\">\n        <thead>\n          <tr>\n            {columns.map(column => (\n              <th key={column.key}>{column.icon} {column.title}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {renderData?.map(dataItem => (\n            <tr key={dataItem.key}>\n              {columns.map(({key, render}) => {\n                let content = dataItem[key];\n\n                if (render && typeof render === 'function') {\n                  content = render(dataItem[key]);\n                }\n\n                return <td key={key}>{content}</td>\n              })}\n            </tr>\n          ))}\n        </tbody>\n        <tfoot>\n          <tr>\n            <td colSpan={columns?.length}>\n              {renderFooter && renderFooter()}\n              <div className=\"pull-right\">\n                <Pagination\n                  total={data?.length}\n                  defaultCurrent={defaultCurrent}\n                  onChange={(nextPage) => setPage(nextPage)}\n                />\n              </div>\n            </td>\n          </tr>\n        </tfoot>\n      </table>\n    </div>\n  )\n}\n\nexport default DataTable;\n","const BASE_URL = 'https://60c03057b8d3670017554728.mockapi.io/api/v1';\n\nconst serialize = function(obj: any) {\n  var str = [];\n  for (var p in obj)\n    if (obj.hasOwnProperty(p)) {\n      str.push(encodeURIComponent(p) + '=' + encodeURIComponent(obj[p]));\n    }\n  return str.join('&');\n};\n\nconst _sendRequest = (url: string, data: any, method: string) => {\n  const ajax = () => {\n    const sendRequest = () => {\n      const defaultOptions = {\n        method,\n      };\n\n      let options;\n\n      let queryString = '';\n      if (method === 'GET') {\n        queryString = data ? '?' + serialize(data) : '';\n      } else {\n        options = {\n          body: JSON.stringify(data),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }\n      }\n\n      return fetch(BASE_URL + url + queryString, { ...defaultOptions, ...options })\n        .then(response => {\n          if (!response.ok) {\n            // throw new Error(\"Bad response from server\");\n            return response.json().then(error => Promise.reject(error));\n          }\n          return response;\n        })\n        .then(response => {\n          return response.json();\n        })\n        .then(json => {\n          return json;\n        });\n    };\n\n    return sendRequest().then(\n      success => {\n        return success;\n      },\n      error => {\n        return Promise.reject(error);\n      },\n    );\n  };\n\n  return ajax();\n}\n\nclass Api {\n  static get(url: string, data?: any) {\n    return _sendRequest(\n      url,\n      data,\n      'GET',\n    );\n  }\n\n  static post(url: string, data?: any) {\n    return _sendRequest(\n      url,\n      data,\n      'POST',\n    );\n  }\n\n  static put(url: string, data?: any) {\n    return _sendRequest(\n      url,\n      data,\n      'PUT',\n    );\n  }\n}\n\nexport default Api;","export const validateName = (name: string) => {\n  if (!name) {\n    return 'This field is required';\n  }\n\n  return '';\n}\n\nexport  const validateEmail = (email: string) => {\n  if (!email) {\n    return 'This field is required';\n  }\n\n\n  const regex = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n  if (!regex.test(email)) {\n    return 'Invalid email format';\n  }\n\n  return '';\n}\n\nexport const validatePosition = (name: string) => {\n  if (!name) {\n    return 'This field is require';\n  }\n\n  return '';\n}","import { useEffect, useState, useCallback } from 'react'\nimport Modal from '../../components/Modal/Modal';\nimport Button from '../../components/Button/Button';\nimport Input from '../../components/Input/Input';\nimport DataTable from '../../components/DataTable/DataTable';\nimport { getEmployees, createEmployee } from '../../services/employee';\nimport { validateName, validateEmail, validatePosition } from './validators';\nimport './Employees.css';\n\ntype Employee = {\n  id: string;\n  name: string;\n  email: string;\n  position: string;\n};\n\nconst DEFAULT_FORM_DATA = {\n  name: '',\n  email: '',\n  position: '',\n};\nconst DEFAULT_FORM_DATA_VALIDATORS = {\n  name: '',\n  email: '',\n  position: '',\n};\n\nexport default function Employees() {\n  let [invalidForm, setInvalidForm] = useState(false);\n  let [formData, setFormData] = useState(DEFAULT_FORM_DATA);\n  let [isLoading, setLoading] = useState(false);\n  let [formValidators, setFormValidators] = useState(DEFAULT_FORM_DATA_VALIDATORS);\n  let [employees, setEmployees] = useState([]);\n  let [isShowModalCreate, setShowModalCreate] = useState(false);\n\n  useEffect(() => {\n    fetchEmployees();\n  }, []);\n\n  const handleCloseCreateModal = useCallback(() => {\n    setShowModalCreate(false);\n    setFormData(DEFAULT_FORM_DATA);\n    setFormValidators(DEFAULT_FORM_DATA_VALIDATORS);\n  }, []);\n\n  const fetchEmployees = async () => {\n    try {\n      setLoading(true);\n      const result = await getEmployees();\n\n      setEmployees(result)\n    } catch (error) {\n      console.log(error)\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  const handleCreateEmployee = useCallback(async () => {\n    if (validateForm()) {\n       try {\n        await createEmployee(formData);\n        handleCloseCreateModal();\n        fetchEmployees();\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }, [formData]);\n\n  const validateForm = () => {\n    setFormValidators({\n      name: validateName(formData.name),\n      email: validateEmail(formData.email),\n      position: validatePosition(formData.position),\n    });\n\n    if (\n      validateName(formData.name) ||\n      validateEmail(formData.email) ||\n      validatePosition(formData.position)\n    ) {\n      setInvalidForm(true);\n      return false\n    } else {\n      setInvalidForm(false);\n      return true\n    };\n  }\n\n  const handleInputChange = (value: string, field: string) => {\n    setFormData({\n      ...formData,\n      [field]: value,\n    });\n  }\n\n  return (\n    <>\n      <DataTable\n        columns={[{\n          title: 'Name',\n          key: 'name',\n          dataIndex: 'name',\n          icon: <i className=\"fab fa-adversal\" />,\n          render: (name) => <span className=\"employee-name\">{name}</span>,\n        }, {\n          title: 'Email',\n          key: 'email',\n          dataIndex: 'email',\n          icon: <i className=\"fas fa-at\" />,\n          render: (email) => <a href={`mailTo:${email}`} className=\"employee-email\">{email}</a>,\n        }, {\n          title: 'Position',\n          key: 'position',\n          dataIndex: 'position',\n          icon: <i className=\"fas fa-align-left\" />,\n          render: (position) => <span className=\"employee-position\">{position}</span>,\n        }]}\n        data={(employees || []).map((employee: Employee) => ({\n          ...employee,\n          key: employee.id,\n        }))}\n        pagination={{\n          pageSize: 5,\n        }}\n        renderFooter={() => (\n          <div className=\"actions-container\">\n            <Button onClick={() => setShowModalCreate(true)}>+ New</Button>\n          </div>\n        )}\n        isLoading={isLoading}\n      />\n      <Modal\n        title=\"Create New Employee\"\n        isVisible={isShowModalCreate}\n        okText=\"Create\"\n        onCancel={handleCloseCreateModal}\n        onOk={handleCreateEmployee}\n      >\n        <>\n          <Input\n            name=\"name\"\n            title=\"Name\"\n            value={formData.name}\n            error={formValidators.name}\n            onChange={value => {\n              handleInputChange(value, 'name');\n              if (invalidForm) {\n                setFormValidators({\n                  ...formValidators,\n                  name: validateName(value),\n                });\n              }\n            }}\n          />\n          <Input\n            name=\"email\"\n            title=\"Email\"\n            value={formData.email}\n            error={formValidators.email}\n            onChange={value => {\n              handleInputChange(value, 'email');\n              if (invalidForm) {\n                setFormValidators({\n                  ...formValidators,\n                  email: validateName(value),\n                });\n              }\n            }}\n          />\n          <Input\n            name=\"position\"\n            title=\"Position\"\n            value={formData.position}\n            error={formValidators.position}\n            onChange={value => {\n              handleInputChange(value, 'position');\n              if (invalidForm) {\n                setFormValidators({\n                  ...formValidators,\n                  position: validateName(value),\n                });\n              }\n            }}\n          />\n        </>\n      </Modal>\n    </>\n  )\n}\n","import Api from '../helpers/api';\n\nexport const getEmployees = (page?: number) => {\n  const options = {\n    // page,\n    // limit: 5,\n    sortBy: 'createdAt',\n    order: 'desc',\n  }\n\n  return Api.get('/employees', options)\n}\n\nexport const createEmployee = (data: any) => {\n  return Api.post('/employees', { ...data, createdAt: new Date().toISOString() })\n}","import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport './App.css';\nimport NavBar from './components/NavBar/NavBar';\nimport Dashboard from './pages/Dashboard/Dashboard';\nimport Counter from './pages/Counter/Counter';\nimport Employees from './pages/Employees/Employees';\n\nfunction App() {\n  return (\n    <Router>\n      <NavBar />\n\n      <main>\n        <Switch>\n          <Route exact path=\"/\">\n            <Dashboard />\n          </Route>\n          <Route path=\"/counter\">\n            <Counter />\n          </Route>\n          <Route path=\"/employees\">\n            <Employees />\n          </Route>\n        </Switch>\n      </main>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}